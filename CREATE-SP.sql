DROP PROCEDURE IF EXISTS GETRECENTOBS;
DROP PROCEDURE IF EXISTS GETDAILYRECORDS;
DROP PROCEDURE IF EXISTS GETWUNDERGROUNDDATA;

DELIMITER $$
CREATE PROCEDURE `GETRECENTOBS`()
BEGIN
	(SELECT 
		*
	FROM
		WEATHER_MEASUREMENT
	ORDER BY created DESC
	LIMIT 1) UNION ALL (SELECT 
		*
	FROM
		WEATHER_MEASUREMENT
	WHERE
		CREATED <= DATE_SUB(NOW(), INTERVAL 1 HOUR)
	ORDER BY created DESC
	LIMIT 1) UNION ALL (SELECT 
		*
	FROM
		WEATHER_MEASUREMENT
	WHERE
		CREATED <= DATE_SUB(NOW(), INTERVAL 6 HOUR)
	ORDER BY created DESC
	LIMIT 1) UNION ALL (SELECT 
		*
	FROM
		WEATHER_MEASUREMENT
	WHERE
		CREATED <= DATE_SUB(NOW(), INTERVAL 12 HOUR)
	ORDER BY created DESC
	LIMIT 1) UNION ALL (SELECT 
		*
	FROM
		WEATHER_MEASUREMENT
	WHERE
		CREATED <= DATE_SUB(NOW(), INTERVAL 24 HOUR)
	ORDER BY created DESC
	LIMIT 1) UNION ALL (SELECT 
		*
	FROM
		WEATHER_MEASUREMENT
	WHERE
		CREATED <= DATE_SUB(NOW(), INTERVAL 48 HOUR)
	ORDER BY created DESC
	LIMIT 1);
END$$

DELIMITER ##
CREATE PROCEDURE `GETDAILYRECORDS`()
BEGIN
    SELECT SUM(RAINFALL) FROM WEATHER_MEASUREMENT WHERE created >= DATE(NOW()) INTO @RainfallSinceMidnight;

    SELECT created FROM WEATHER_MEASUREMENT WHERE rainfall > 0 ORDER BY created DESC LIMIT 1 INTO @stormEnd;
    SELECT created FROM WEATHER_MEASUREMENT WHERE rainfall = 0 AND created < @stormEnd ORDER BY created DESC LIMIT 1 INTO @stormStart;
    SELECT SUM(Rainfall) FROM WEATHER_MEASUREMENT WHERE created >= @stormStart AND created <= @stormEnd INTO @stormTotal;

    SELECT AMBIENT_TEMPERATURE FROM WEATHER_MEASUREMENT WHERE created >= DATE(NOW()) ORDER BY AMBIENT_TEMPERATURE ASC LIMIT 1 INTO @LowSinceMidnight;
    SELECT AMBIENT_TEMPERATURE FROM WEATHER_MEASUREMENT WHERE created >= DATE(NOW()) ORDER BY AMBIENT_TEMPERATURE DESC LIMIT 1 INTO @HighSinceMidnight;

    SELECT 
        @RainFallSinceMidnight AS RainFallSinceMidnight,
        @stormStart AS LastStormStart,
        @stormEnd AS LastStormEnd,
        @stormTotal AS LastStormTotal,
        @LowSinceMidnight AS LowSinceMidnight,
        @HighSinceMidnight AS HighSinceMidnight;
END##

DELIMITER &&
CREATE PROCEDURE `GETWUNDERGROUNDDATA`()
BEGIN
    SELECT SUM(Rainfall) FROM WEATHER_MEASUREMENT WHERE created >= DATE_SUB(NOW(),INTERVAL 1 HOUR) INTO @rainPastHour;
    SELECT SUM(Rainfall) FROM WEATHER_MEASUREMENT WHERE created >= DATE(NOW()) INTO @rainSinceMidnight;
    SELECT WIND_DIRECTION, WIND_SPEED, WIND_GUST_SPEED, HUMIDITY, AMBIENT_TEMPERATURE, AIR_PRESSURE, GROUND_TEMPERATURE, @rainPastHour, @rainSinceMidnight FROM WEATHER_MEASUREMENT ORDER BY created DESC LIMIT 1;
END&&